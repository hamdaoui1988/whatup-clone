{"version":3,"sources":["firebase.js","SidebarChat.js","StateProvider.js","Sidebar.js","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","seed","setSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","roomName","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","photoURL","IconButton","placeholder","type","room","Chat","input","setInput","roomId","useParams","setRoomName","Date","length","timestamp","toDate","toUTCString","AttachFile","displayName","InsertEmoticon","onChange","e","target","preventDefault","FieldValue","serverTimestamp","actionTypes","state","action","console","log","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f6a7291.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\n\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD1A8mtvdQNSL0YuyDaXsRoFBKLbMxuDOE\",\r\n  authDomain: \"whatup-clone-2df51.firebaseapp.com\",\r\n  projectId: \"whatup-clone-2df51\",\r\n  storageBucket: \"whatup-clone-2df51.appspot.com\",\r\n  messagingSenderId: \"549434364983\",\r\n  appId: \"1:549434364983:web:f54577260a98dea8c65bb2\",\r\n  measurementId: \"G-9C19FMT5E6\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport { auth, provider};\r\n\r\nexport default db;\r\n","import React, { useEffect , useState } from \"react\"\r\nimport './sidebarchat.css'\r\nimport { Avatar } from '@material-ui/core'\r\nimport db from './firebase'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction SidebarChat({ id, name, addNewChat }) {\r\n\r\nconst [seed, setSeed] = useState(\"\");\r\nconst [messages, setMessages] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n\r\n    if (id) {\r\n      db.collection('rooms').doc(id).collection('messages')\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) =>\r\n      setMessages(snapshot.docs.map((doc) =>\r\n      doc.data()))\r\n      );\r\n      \r\n    }\r\n    }, [id]);\r\n\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));\r\n    }, []);\r\n\r\nconst createchat = () => {\r\n  const roomName = prompt(\"Please Enter a name for the Chat\");\r\n\r\n  if (roomName) {\r\n\r\n    db.collection(\"rooms\").add({\r\n      name: roomName\r\n    });\r\n  }\r\n\r\n};\r\n\r\n    return !addNewChat ? (\r\n      <Link to={`/rooms/${id}`}>\r\n         <div className=\"sidebarchat\">\r\n            <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}  />     \r\n\r\n            <div className=\"sidebarchat__info\">\r\n           <h2>{name}</h2>  \r\n            <p>{messages[0]?.message}</p>  \r\n            </div>\r\n\r\n              </div>\r\n\r\n\r\n      </Link>\r\n        \r\n    ) : (\r\n<div onClick={createchat} className=\"sidebarchat\">\r\n    <h2>Add new Chat</h2>\r\n</div>\r\n    );\r\n}\r\n\r\nexport default SidebarChat\r\n","import React, { createContext, useContext, useReducer } from \"react\"\r\n\r\nexport const StateContext = createContext()\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n\t<StateContext.Provider value={useReducer(reducer, initialState)}>\r\n\t\t{children}\r\n\t</StateContext.Provider>\r\n)\r\n\r\nexport const useStateValue = () => useContext(StateContext)","import React, { useState, useEffect } from \"react\"\r\nimport './Sidebar.css'\r\nimport { Avatar, IconButton } from '@material-ui/core'\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\"\r\nimport ChatIcon from \"@material-ui/icons/Chat\"\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\"\r\nimport  SearchOutlinedIcon  from \"@material-ui/icons/SearchOutlined\"\r\nimport SidebarChat from './SidebarChat'\r\nimport db from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\"\r\n\r\n\r\nfunction Sidebar() {\r\n\r\n    const [rooms, setRooms] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue([]);\r\n\r\n    useEffect(() => {\r\n        db.collection('rooms').onSnapshot(snapshot  => (\r\n           \r\n                setRooms(\r\n                    snapshot.docs.map((doc) => ({\r\n                       id: doc.id,\r\n                       data: doc.data(),\r\n                    }))\r\n                    )\r\n                  ))\r\n                  }, []);\r\n\r\n\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar_header\">\r\n            <Avatar src={user?.photoURL}/>\r\n               <div className=\"sidebar_headerright\">\r\n                   <IconButton>\r\n                   <DonutLargeIcon />\r\n                   </IconButton>\r\n                   <IconButton>\r\n                   <ChatIcon />  \r\n                   </IconButton>\r\n                   <IconButton>\r\n                   <MoreVertIcon />  \r\n                   </IconButton>\r\n\r\n               \r\n               \r\n               \r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar_search\">\r\n                <div className=\"sidebar_search_container\">\r\n                   <SearchOutlinedIcon />\r\n                   <input placeholder=\"Search or Start a new Chat\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"sidebar_chat\">\r\n              <SidebarChat addNewChat />\r\n              {rooms.map(room => (\r\n                  <SidebarChat key={room.id} id={room.id}\r\n                  name={room.data.name} />\r\n              ))}\r\n            </div> \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, {useState, useEffect} from \"react\"\r\nimport './chat.css'\r\nimport { Avatar, IconButton } from '@material-ui/core'\r\nimport { SearchOutlined } from \"@material-ui/icons\"\r\nimport { AttachFile } from \"@material-ui/icons\"\r\nimport { MoreVert } from \"@material-ui/icons\"\r\nimport { InsertEmoticon } from \"@material-ui/icons\"\r\nimport MicIcon from \"@material-ui/icons/Mic\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport db from \"./firebase\"\r\nimport { useStateValue } from \"./StateProvider\"\r\nimport firebase from \"firebase\"\r\n\r\n\r\nfunction Chat() {\r\n\r\n\r\n    const[input,setInput] = useState(\"\");\r\n    const { roomId } = useParams();\r\n    const [roomName , setRoomName] = useState(\"\");\r\n    const [messages , setMessages] = useState([]);\r\n    const [{ user }, dispatch] = useStateValue([]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (roomId) {\r\n            db.collection('rooms').doc(roomId).onSnapshot((snapshot) => \r\n                setRoomName(snapshot.data().name));\r\n\r\n            db.collection('rooms').doc(roomId).collection('messages').orderBy('timestamp', 'asc').onSnapshot(snapshot =>\r\n                 \r\n                    setMessages(snapshot.docs.map((doc) => \r\n                    doc.data()))\r\n                    \r\n                    )\r\n             \r\n        }\r\n\r\n    }, [roomId]);\r\n\r\n\r\n    const sendMessage = (e) => {\r\n       e.preventDefault();\r\n       db.collection('rooms').doc(roomId).collection('messages').add({\r\n           message: input,\r\n           name: user.displayName,\r\n           timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n       })\r\n       setInput(\"\");\r\n    }\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Avatar />\r\n                <div className=\"chat__header__info\">\r\n                   <h3>{roomName}</h3>\r\n                   <p>Last seen{\" \"}\r\n                   {new Date(\r\n                     messages[messages.length - 1]?.\r\n                     timestamp?.toDate()\r\n                   ).toUTCString()  \r\n                   }\r\n                   \r\n                   </p>\r\n               </div>\r\n               <div className=\"chat__headerright\">\r\n                 <IconButton>\r\n                    <SearchOutlined />\r\n                 </IconButton>\r\n\r\n                 <IconButton>\r\n                    <AttachFile />\r\n                 </IconButton>\r\n\r\n                 <IconButton>\r\n                     <MoreVert />\r\n                 </IconButton>\r\n               </div>\r\n\r\n               \r\n            </div>\r\n            <div className=\"chat_body\">\r\n                {messages.map((message) => (\r\n\r\n               \r\n                <p className={`chat_message ${message.name === user.displayName && \"chat_receiver\"}`}>\r\n                <span className=\"chat_name\">{message.name}</span>\r\n                {message.message}\r\n                <span className=\"chat_timestamp\">\r\n                    {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                </span>\r\n                </p>\r\n                ))}   \r\n            </div>\r\n\r\n            <div className=\"chat_footer\">\r\n                <InsertEmoticon />\r\n                <form>\r\n                    <input value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    type=\"text\" />\r\n                    <button type=\"submit\" onClick={sendMessage}>Send a Message</button>\r\n                </form>\r\n                <MicIcon />\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","export const initialState = {\r\n\tuser: null,\r\n}\r\n\r\nexport const actionTypes = {\r\n\tSET_USER: \"SET_USER\",\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n\tconsole.log(action);\r\n\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.SET_USER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: action.user,\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;","import React from \"react\"\r\nimport './login.css'\r\nimport { Button } from '@material-ui/core'\r\nimport { auth, provider } from \"./firebase\"\r\nimport { useStateValue } from \"./StateProvider\"\r\nimport { actionTypes } from \"./reducer\"\r\n\r\n\r\nfunction Login() {\r\n\r\n\r\n    const [state, dispatch] = useStateValue();\r\n    const signIn = () => {\r\nauth\r\n.signInWithPopup(provider)\r\n.then((result) => {\r\n  console.log(result);  \r\ndispatch({\r\ntype: actionTypes.SET_USER,\r\nuser: result.user,\r\n})\r\n})\r\n.catch((error) => {\r\nalert(error.message);\r\n});\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n           <div className=\"login__container\">\r\n             <img src=\"https://cdn.freelogovectors.net/wp-content/uploads/2016/12/wechat-logo.png\" alt=\"\" />\r\n               <div className=\"login__text\">\r\n                 <h1>Sign in to Noureddine's Chat</h1>\r\n               </div>\r\n\r\n               <Button onClick={signIn}>\r\n                   Sign In Via Google\r\n               </Button>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","\nimport './App.css';\nimport Sidebar from './Sidebar'\nimport Chat from './Chat'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { useState } from 'react';\nimport Login from './Login'\nimport { useStateValue } from './StateProvider';\n\nfunction App() {\n\n  const [{ user }, dispatch] = useStateValue();\n\n  \n  return (\n    <div className=\"App\">\n\n      {!user ? (\n         <Login />\n       ) : (\n\n        <div className=\"app__body\">\n     \n        <Router>\n          <Switch>\n            \n              <Route path=\"/rooms/:roomId\">\n              <Sidebar />\n              <Chat />\n              </Route>\n\n              <Route path=\"/\">\n              <Sidebar />\n              <Chat />\n              </Route>\n\n          </Switch>\n        \n\n        </Router>\n\n      </div>\n\n      )}\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer, { initialState} from './reducer';\nimport { StateProvider } from './StateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}